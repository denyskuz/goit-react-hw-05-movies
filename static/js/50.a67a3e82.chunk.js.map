{"version":3,"file":"static/js/50.a67a3e82.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Items/Item.module.css?ce58","components/Items/Items.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Item_list__G04wX\",\"item\":\"Item_item__vicSQ\"};","import { Link, useLocation } from \"react-router-dom\";\nimport { arrayOf, shape, string, number  } from 'prop-types';\nimport classes from \"./Item.module.css\";\n\nconst Items = ({ items }) => {\n  const location = useLocation();\n    return (\n      <ul className={classes.list}>\n        {items.map(({id, title, poster_path, name }) => (\n          <li key={id} className={classes.item}>\n            <Link\n              to={ `/movies/${id}`}\n              state={{ from: location }}\n            >\n              <img\n                className={classes.image}\n                src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}`: 'https://via.placeholder.com/500'}\n                alt={title || name}\n                width=\"320\"\n              />\n              <strong>{title || name}</strong>\n            </Link>\n          </li>\n        ))}\n        </ul>\n    );\n};\nItems.propTypes = {\n  items: arrayOf(shape({\n    id: number.isRequired,\n    title: string,\n    poster_path: string.isRequired,\n    name: string\n  })).isRequired\n};\nexport default Items;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"btn\":\"SearchBar_btn__PKGSc\"};","import classes from \"./SearchBar.module.css\";\nimport { func, string  } from 'prop-types';\n\nconst SearchBar = ({ onSubmit, defaultValue}) => { \n return (\n     <form className={ classes.form } action=\"#\" onSubmit={onSubmit}>\n        <input name=\"search\" type=\"text\" defaultValue={defaultValue}/>\n        <button type=\"submit\" className={ classes.btn }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 32 32\">\n                <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n            </svg>\n        </button>\n      </form>\n  );\n}\nSearchBar.propTypes = {\n    onSubmit: func.isRequired,\n    defaultValue: string\n};\nexport default SearchBar;","import { useEffect, useState } from \"react\";\nimport { fetchSearchQuery } from '../services/api';\nimport { useSearchParams } from \"react-router-dom\";\nimport Items from \"components/Items\";\nimport SearchBar from \"components/SearchBar\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [items, setMovieItems] = useState([]);\n\n  useEffect(() => {\n    if (\n      searchParams.get('query') !== '' &&\n      searchParams.get('query') !== null\n    ) {\n      fetchSearchQuery(searchParams.get('query')).then(movies =>\n        setMovieItems(movies.results)\n      );\n    } else {\n      setMovieItems([]);\n    }\n  }, [searchParams]);\n\n  const eventFrom = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements['search'].value.trim() });\n  };\n\n  return (\n    <main>\n      <SearchBar\n        onSubmit={eventFrom}\n        defaultValue={searchParams.get('query')}\n      />\n      {items.length ? <Items items={items} /> : 'No items :('}\n    </main>\n    );\n};\nexport default Movies;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e704dedb4527dcb2d58f4f28374639e6\";\n\nasync function errorHandle(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok  \n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovies() {\n  return errorHandle(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchQuery(searchQuery) {\n  return errorHandle(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieById(id) {\n  return errorHandle(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCast(id) {\n  return errorHandle(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(id) {\n  return errorHandle(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}"],"names":["items","location","useLocation","className","classes","map","id","title","poster_path","name","to","state","from","src","alt","width","onSubmit","defaultValue","action","type","xmlns","height","fill","viewBox","d","useSearchParams","searchParams","setSearchParams","useState","setMovieItems","useEffect","get","fetchSearchQuery","then","movies","results","e","preventDefault","query","target","elements","value","trim","length","Items","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","errorHandle","url","config","fetch","response","ok","json","Error","fetchTrendingMovies","searchQuery","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}